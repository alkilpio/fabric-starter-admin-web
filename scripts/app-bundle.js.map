{"version":3,"sources":["src/account.js","src/app.js","src/config.js","src/crud.js","src/environment.js","src/home.js","src/login.js","src/main.js","src/resources/index.js","src/services/alert-service.js","src/services/chaincode-service.js","src/services/config-service.js","src/services/identity-service.js","src/services/socket-service.js","src/resources/elements/key.js"],"names":["Account","IdentityService","EventAggregator","ChaincodeService","accountTypeByName","queryAll","res","push","query","Promise","all","setNew","accountEdit","new","value","CRUD","log","LogManager","getLogger","App","I18N","SocketService","AlertService","i18n","identityService","socketService","alertService","setLocale","configureRouter","config","router","title","tr","routes","route","name","moduleId","nav","map","attached","username","org","subscribe","detached","debug","logout","then","success","catch","error","e","Config","put","key","val","localStorage","setItem","JSON","stringify","get","getItem","environment","parse","clear","getUrl","path","baseUrl","ValidationControllerFactory","eventAggregator","chaincodeService","channel","chaincode","keyDelim","subscriberBlock","dispose","entity","a","o","id","fromKey","toKey","guid","args","concat","invoke","removeEdit","remove","setCurrent","getCurrentTag","canEdit","parts","split","length","slice","join","s4","Math","floor","random","toString","substring","testing","Home","ConfigService","configService","channelList","chaincodeList","orgList","orgs","installedChain","blocks","targets","lastBlock","oneChannel","oneChaincode","oneOrg","fnc","selectedChain","i","queryChannels","getChannels","channels","queryChaincodes","getChaincodes","chaincodes","queryBlocks","queryOrgs","queryAllChain","getOrgs","queryTarg","pos","indexOf","splice","getInstalledChaincodes","chain","bl","getLastBlock","block","getBlock","sort","console","addChannelOrg","addOrg","getInvoke","blockNumber","getQuery","Login","login","enroll","password","configure","aurelia","use","standardConfiguration","plugin","instance","aliases","TCustomAttribute","configureAliases","i18next","Backend","with","loader","setup","backend","loadPath","attributes","lng","fallbackLng","options","version","feature","developmentLogging","start","isLoggedIn","setRoot","toastr","positionClass","progressBar","closeButton","timeOut","extendedTimeOut","info","m","HttpClient","http","fetch","url","params","method","resolve","reject","jwt","getJwt","promise","Object","keys","encodeURIComponent","k","headers","body","response","json","j","ok","msg","statusText","status","Error","err","test","height","low","num","header","number","channel_id","allChannel","func","channelId","chaincodeId","fcn","trim","setTimeout","mspid","Aurelia","setJwt","socket","io","connect","connected","subscribed","on","publish","disconnect","KeyCustomElement","attribute","oChanged","objectType"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {CRUD} from './crud';\nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {IdentityService} from './services/identity-service';\nimport {ChaincodeService} from './services/chaincode-service';\n\n@inject(IdentityService, EventAggregator, ChaincodeService)\nexport class Account extends CRUD {\n  accountTypeByName = {};\n\n  queryAll() {\n    let res = [];\n    res.push(this.query('account'));\n\n    return Promise.all(res);\n  }\n\n  setNew() {\n    this.accountEdit = {new: true, value: {}};\n  }\n\n}\n","import 'bootstrap';\nimport {I18N} from 'aurelia-i18n';\nimport {LogManager} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {IdentityService} from './services/identity-service';\nimport {SocketService} from './services/socket-service';\nimport {AlertService} from './services/alert-service';\n\nlet log = LogManager.getLogger('App');\n\n@inject(I18N, IdentityService, SocketService, AlertService)\nexport class App {\n  constructor(i18n, identityService, socketService, alertService) {\n    this.i18n = i18n;\n    // this.i18n.setLocale(navigator.language || 'en');\n    this.i18n.setLocale('ru');\n    this.identityService = identityService;\n    this.socketService = socketService;\n    this.alertService = alertService;\n  }\n\n  configureRouter(config, router) {\n    config.title = this.i18n.tr('appName');\n    let routes = [\n      {route: ['', 'home'], name: 'home', moduleId: './home', nav: true, title: this.i18n.tr('home')}\n     ];\n\n    config.map(routes);\n    this.router = router;\n  }\n\n  attached() {\n    this.username = this.identityService.username;\n    this.org = this.identityService.org;\n\n    this.socketService.subscribe();\n  }\n\n  detached() {\n    log.debug('detached');\n    // this.socketService.disconnect();\n  }\n\n  logout() {\n    this.identityService.logout().then(() => {\n      this.alertService.success(`logged out`);\n    }).catch(e => {\n      this.alertService.error(`cannot log out, caught ${e}`);\n    });\n  }\n\n}\n","import environment from './environment';\n\nexport class Config {\n\n  static put(key, val) {\n    return localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  static get(key) {\n    let val = localStorage.getItem(key);\n    if(val === 'undefined' || val === null) {\n      val = environment[key];\n      this.put(key, val);\n      return val;\n    }\n    else {\n      return JSON.parse(val);\n    }\n  }\n\n  static clear() {\n    localStorage.clear();\n  }\n\n  static getUrl(path) {\n    const baseUrl = Config.get('baseUrl');\n    if(baseUrl) {\n      return path ? `${baseUrl}/${path}` : baseUrl;\n    }\n    else {\n      return path ? `/${path}` : '/';\n    }\n  }\n\n}\n","import {LogManager} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {IdentityService} from './services/identity-service';\nimport {ChaincodeService} from './services/chaincode-service';\nimport {ValidationControllerFactory, ValidationRules} from 'aurelia-validation';\n\nlet log = LogManager.getLogger('CRUD');\n\n@inject(IdentityService, EventAggregator, ChaincodeService, ValidationControllerFactory)\nexport class CRUD {\n  channel = 'common';\n  chaincode = 'reference';\n\n  constructor(identityService, eventAggregator, chaincodeService) {\n    this.identityService = identityService;\n    this.eventAggregator = eventAggregator;\n    this.chaincodeService = chaincodeService;\n  }\n\n  attached() {\n    this.queryAll();\n\n    this.subscriberBlock = this.eventAggregator.subscribe('block', o => {\n      this.queryAll();\n    });\n  }\n\n  detached() {\n    this.subscriberBlock.dispose();\n  }\n\n  queryAll() {\n    /*['depository', 'deponent'].forEach(entity => {\n      this.query(entity);\n    });*/\n  }\n\n  query(entity) {\n    return this.chaincodeService.query(this.channel, this.chaincode, 'list', [entity]).then(o => {\n      const a = o || [];\n      this[entity + 'List'] = a.map(e => {\n        e.id = this.fromKey(e.key)[1];\n        return e;\n      });\n    }).catch(e => {\n      log.error('cannot query', e);\n    });\n  }\n\n  put(o, entity) {\n    if (!o.key) {\n      o.key = this.toKey([entity, o.id || this.guid()]);\n    }\n    let args = this.fromKey(o.key).concat([JSON.stringify(o.value)]);\n    return this.chaincodeService.invoke(this.channel, this.chaincode, 'put', args).then(() => {\n      this.removeEdit(entity);\n    }).catch(e => {\n      log.error('cannot put', e);\n    });\n  }\n\n  remove(key) {\n    let args = this.fromKey(key);\n    let entity = args[0];\n    return this.chaincodeService.invoke(this.channel, this.chaincode, 'delete', args).then(() => {\n      this.removeEdit(entity)\n    }).catch(e => {\n      log.error('cannot remove', e);\n    });\n  }\n\n  removeEdit(entity) {\n    this[entity + 'Edit'] = null;\n  }\n\n  setCurrent(key) {\n    let args = this.fromKey(key);\n    let entity = args[0];\n    let id = args[1];\n    return this.chaincodeService.query(this.channel, this.chaincode, 'get', args).then(o => {\n      this[this.getCurrentTag(entity)] = {key: key, value: o, id: id};\n    }).catch(e => {\n      log.error('cannot query', e);\n    });\n  }\n\n  setNew(entity) {\n    this[this.getCurrentTag(entity)] = {new: true, value: {}};\n  }\n\n  getCurrentTag(entity) {\n    return entity + (this.canEdit(entity) ? 'Edit' : 'View');\n  }\n\n  canEdit(entity) {\n    //return this.identityService.org === 'regulator';\n    return true;\n  }\n\n  keyDelim = '\\u0000';\n\n  fromKey(key) {\n    let parts = key.split(this.keyDelim);\n    return parts.length > 1 ? parts.slice(1, -1) : [key];\n  }\n\n  toKey(parts) {\n    return this.keyDelim + parts.join(this.keyDelim) + this.keyDelim;\n  }\n\n  guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n}\n","export default {\n  baseUrl: 'http://localhost:4000',\n  debug: true,\n  testing: false\n};\n","import {LogManager} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {IdentityService} from './services/identity-service';\nimport {ChaincodeService} from './services/chaincode-service';\nimport {ConfigService} from './services/config-service';\n\n\nlet log = LogManager.getLogger('Home');\n\n@inject(IdentityService, EventAggregator, ChaincodeService, ConfigService)\nexport class Home {\n  channelList = [];\n  chaincodeList = [];\n  orgList = [];\n  orgs = [];\n  installedChain = [];\n  blocks = [];\n  targets = [];\n  lastBlock = null;\n  oneChannel = null;\n  oneChaincode = null;\n  oneOrg = null;\n  fnc = null;\n  args = null;\n  invoke = null;\n  query = null;\n  selectedChain = null;\n  i = 0;\n\n  constructor(identityService, eventAggregator, chaincodeService, configService) {\n    this.identityService = identityService;\n    this.eventAggregator = eventAggregator;\n    this.chaincodeService = chaincodeService;\n    this.configService = configService;\n  }\n\n  attached() {\n    this.queryChannels();\n    this.subscriberBlock = this.eventAggregator.subscribe('block', o => {\n      log.debug('block', o);\n      this.queryAll();\n    });\n  }\n\n  detached() {\n    this.subscriberBlock.dispose();\n  }\n\n  queryAll() {\n  }\n\n  queryChannels() {\n    this.chaincodeService.getChannels().then(channels => {\n      this.channelList = channels;\n    });\n  }\n\n  queryChaincodes() {\n\n    this.chaincodeService.getChaincodes(this.oneChannel).then(chaincodes => {\n      this.chaincodeList = chaincodes;\n    });\n    this.queryBlocks();\n    this.queryOrgs();\n    this.queryAllChain();\n  }\n\n  queryOrgs() {\n    this.chaincodeService.getOrgs(this.oneChannel).then(orgs => {\n      this.orgList = orgs;\n    });\n  }\n\n  queryTarg() {\n    this.targets = JSON.parse(JSON.stringify(this.orgList));\n    let pos = this.targets.indexOf(\"Orderer\");\n    this.targets.splice(pos, 1);\n  }\n\n  queryAllChain() {\n    this.chaincodeService.getInstalledChaincodes().then(chain => {\n      this.installedChain = chain;\n    });\n  }\n\n  // updateBlocks() {\n  //   //console.log(this.blocks);\n  //   let bl = this.invoke;\n  //   setTimeout(function () {\n  //     console.log(bl);\n  //   }, 5000);\n  //   this.blocks.splice(0, 1);\n  //   this.blocks.push(this.invoke);\n  // }\n\n  queryBlocks() {\n    this.blocks = [];\n    let bl = [];\n    this.chaincodeService.getLastBlock(this.oneChannel).then(block => {\n      for (let i = block - 5; i < block; i++) {\n        if (i < 0)\n          continue;\n        this.chaincodeService.getBlock(this.oneChannel, i).then(block => {\n          bl.push(block);\n        });\n      }\n     bl.sort();\n    });\n    this.blocks = bl;\n    console.log(this.blocks);\n  }\n\n  // addChannelChaincode() {\n  //   this.chaincodeService.installChaincode(this.oneChannel, this.selectedChain).then(inf => {\n  //     this.inf = inf;\n  //   });\n  //   this.queryChaincodes();\n  // }\n\n  // addChannelChaincode() {\n  //   this.chaincodeService.installChaincode(this.oneChannel, this.selectedChain).then(inf => {\n  //     this.inf = inf;\n  //   });\n  //   this.queryChaincodes();\n  // }\n\n  addChannelOrg() {\n    this.chaincodeService.addOrg(this.oneChannel, this.oneOrg);\n    this.queryOrgs();\n  }\n\n  getInvoke() {\n    this.query = null;\n    this.chaincodeService.invoke(this.oneChannel, this.oneChaincode, this.fnc, this.args).then(invoke => {\n      console.log(invoke);\n      this.blocks.splice(0, 1);\n      this.blocks.push(invoke.blockNumber);\n      this.invoke = invoke;\n    });\n  }\n\n  getQuery() {\n    this.invoke = null;\n    this.chaincodeService.query(this.oneChannel, this.oneChaincode, this.fnc, this.args).then(query => {\n      this.query = query;\n    });\n  }\n\n\n}\n","import {LogManager} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {IdentityService} from './services/identity-service';\nimport {AlertService} from './services/alert-service';\n\nlet log = LogManager.getLogger('Login');\n\n@inject(IdentityService, AlertService)\nexport class Login {\n\n  constructor(identityService, alertService) {\n    this.identityService = identityService;\n    this.alertService = alertService;\n  }\n\n  get org() {\n    return this.identityService.org;\n  }\n\n  login() {\n    this.identityService.enroll(this.username, this.password).then(() => {\n      this.alertService.success(`${this.username} logged in`);\n    }).catch(e => {\n      this.alertService.error(`cannot enroll, caught ${e}`);\n    });\n  }\n\n}\n","import environment from './environment';\nimport {Backend, TCustomAttribute} from 'aurelia-i18n';\n\n// import {TCustomAttribute} from 'aurelia-i18n';\n// import Backend from 'i18next-xhr-backend';\n\nexport function configure(aurelia) {\n\n  aurelia.use\n  .standardConfiguration()\n  .plugin('aurelia-i18n', (instance) => {\n    let aliases = ['t', 'i18n'];\n    // add aliases for 't' attribute\n    TCustomAttribute.configureAliases(aliases);\n\n    // register backend plugin\n    instance.i18next.use(Backend.with(aurelia.loader));\n    // instance.i18next.use(Backend);\n\n    return instance.setup({\n      backend: {                                  // <-- configure backend settings\n        loadPath: './locales/{{lng}}/{{ns}}.json', // <-- XHR settings for where to get the files from\n      },\n      attributes: aliases,\n      lng: 'en',\n      fallbackLng: 'en',\n      debug: false\n    });\n  })\n  .plugin('aurelia-table')\n  .plugin('aurelia-validation')\n  .plugin('aurelia-bootstrap', config => config.options.version = 4)\n  .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => {\n    let isLoggedIn = localStorage.getItem('jwt');\n    if (isLoggedIn) {\n      aurelia.setRoot();\n    }\n    else {\n      aurelia.setRoot('login');\n    }\n  });\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\nimport * as toastr from 'toastr';\n\nlet log = LogManager.getLogger('AlertService');\n\n@inject(toastr)\nexport class AlertService {\n\n  constructor(toastr) {\n    this.toastr = toastr;\n    this.toastr.options.positionClass = 'toast-bottom-right';\n    this.toastr.options.progressBar = true;\n    this.toastr.options.closeButton = true;\n    this.toastr.options.timeOut = 1000;\n    this.toastr.options.extendedTimeOut = 2000;\n  }\n\n  info(m) {\n    this.toastr.info(m);\n  }\n\n  error(m) {\n    this.toastr.error(m);\n  }\n\n  success(m) {\n    this.toastr.success(m);\n  }\n\n}\n","import {LogManager} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {IdentityService} from './identity-service';\nimport {AlertService} from './alert-service';\nimport {Config} from '../config';\n\nlet log = LogManager.getLogger('ChaincodeService');\n\nconst baseUrl = Config.getUrl('channels');\n\n@inject(HttpClient, IdentityService, AlertService)\nexport class ChaincodeService {\n\n  constructor(http, identityService, alertService) {\n    this.identityService = identityService;\n    this.http = http;\n    this.alertService = alertService;\n  }\n  fetch(url, params, method, org, username) {\n    log.debug('fetch', params);\n    log.debug(JSON.stringify(params));\n    return new Promise((resolve, reject) => {\n      const jwt = IdentityService.getJwt(org, username);\n\n      let promise;\n\n      if (method === 'get') {\n        let query = '';\n        if (params) {\n          query = '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n        }\n\n        promise = this.http.fetch(`${url}${query}`, {\n          headers: {\n            'Authorization': 'Bearer ' + jwt\n          }\n        });\n      } else {\n        promise = this.http.fetch(url, {\n          method: method,\n          body: json(params),\n          headers: {\n            'Authorization': 'Bearer ' + jwt\n          }\n        });\n      }\n\n      promise.then(response => {\n        response.json().then(j => {\n          log.debug('fetch', j);\n\n          if (!response.ok) {\n            const msg = `${response.statusText} ${j}`;\n\n            if (response.status === 401) {\n              this.alertService.info('session expired, logging you out');\n              this.identityService.logout();\n            } else {\n              this.alertService.error(msg);\n            }\n\n            reject(new Error(msg));\n          } else {\n            resolve(j);\n          }\n        });\n\n      }).catch(err => {\n        this.alertService.error(`caught ${err}`);\n        reject(err);\n      });\n    });\n  }\n\n  getLastBlock(channel, org, username) {\n    const url = Config.getUrl(`channels/${channel}`);\n\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        const test = j.height;\n        resolve(test.low);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getBlock(channel, num, org, username) {\n    log.debug(`getChannels ${org} ${username}`);\n    const url = Config.getUrl(`channels/${channel}/blocks/${num}`);\n\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        const test = j.header;\n        resolve(test.number);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getChannels(org, username) {\n    log.debug(`getChannels ${org} ${username}`);\n\n    const url = baseUrl;\n\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        // console.log(j);\n        const channels = j.map(o => {\n          return o.channel_id;\n        });\n        resolve(channels);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getChaincodes(channel, org, username) {\n    log.debug(`getChaincodes ${org} ${username}`);\n    const url = Config.getUrl(`channels/${channel}/chaincodes`);\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        const test = j.chaincodes;\n        const chaincode = test.map(o => {\n          return o.name;\n        });\n        resolve(chaincode);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getInstalledChaincodes(org, username) {\n    log.debug(`getChaincodes ${org} ${username}`);\n\n    // const url = Config.getUrl(`channels/${channel}/chaincodes`);\n    const url = Config.getUrl(`chaincodes`);\n\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        // console.log(j);\n        const allChannel = j.map(o => {\n          return o.name;\n        });\n        resolve(allChannel);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getOrgs(channel, org, username) {\n    log.debug(`getOrgs ${org} ${username}`);\n    const url = Config.getUrl(`channels/${channel}/orgs`);\n\n\n    return new Promise((resolve, reject) => {\n      this.fetch(url, null, 'get', org, username).then(j => {\n        const orgs = j.map(o => {\n          return o.id;\n        });\n        // console.log(channel);\n        resolve(orgs);\n      })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  // installChaincode(channel, chaincode, org, username) {\n  //   log.debug(`getOrgs ${org} ${username}`);\n  //   const url = Config.getUrl(`channels/${channel}/chaincode/${chaincode}`);\n  //   const params = {\n  //     channelId: channel,\n  //     chaincodeId: chaincode,\n  //     fcn: 'invokeChaincode'\n  //   };\n  //\n  //   return new Promise((resolve, reject) => {\n  //         this.fetch(url, params, 'post', org, username).then(j => {\n  //           console.log(j);\n  //           resolve(j.transaction);\n  //         })\n  //           .catch(err => {\n  //             reject(err);\n  //           });\n  //       });\n  // }\n\n  // addOrg(channel,newOrg, org, username) {\n  //   const url = Config.getUrl(`channels/${channel}/orgs`);\n  //   const params = {\n  //     address: org,\n  //   };\n  //   return new Promise((resolve, reject) => {\n  //     this.fetch(url, params, 'post', org, username).then(j => {\n  //       resolve(j.transaction);\n  //     })\n  //       .catch(err => {\n  //         reject(err);\n  //       });\n  //   });\n  // }\n\n  query(channel, chaincode, func, args, org, username) {\n    log.debug(`query channel=${channel} chaincode=${chaincode} func=${func} ${org} ${username}`, args);\n    const url = Config.getUrl(`channels/${channel}/chaincodes/${chaincode}`);\n    //var res = args.trim().split(\" \");\n    //console.log(res);\n    const params = {\n      channelId: channel,\n      chaincodeId: chaincode,\n      fcn: func,\n      args: json(args.trim().split(\" \"))\n    };\n    // console.log(params.args);\n    return new Promise((resolve, reject) => {\n      this.fetch(url, params, 'get', org, username).then(j => {\n        // console.log(j);\n        // resolve(JSON.parse(j[0]));\n        resolve(j);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  invoke(channel, chaincode, func, args, org, username) {\n    log.debug(`invoke channel=${channel} chaincode=${chaincode} func=${func} ${org} ${username}`, args);\n\n    //const peerOrg = org ? org.name : this.identityService.org;\n    const url = Config.getUrl(`channels/${channel}/chaincodes/${chaincode}`);\n    const params = {\n      channelId: channel,\n      chaincodeId: chaincode,\n      fcn: func,\n      args: args.trim().split(\" \")\n    };\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n      this.fetch(url, params, 'post', org, username).then(j => {\n        console.log(j);\n        resolve(j);\n      })\n        .catch(err => {\n          reject(err);\n        });\n      }, );\n    });\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {Config} from '../config';\n\nlet log = LogManager.getLogger('ConfigService');\n\n@inject(HttpClient)\nexport class ConfigService {\n\n  constructor(http) {\n    this.http = http;\n  }\n\n  get() {\n    return new Promise((resolve, reject) => {\n      this.http.fetch(Config.getUrl('mspid'))\n      .then(response => response.json())\n      .then(mspid => {\n        log.debug('mspid', mspid);\n        this.config = {\n          org: mspid\n        };\n\n        resolve(this.config);\n      })\n      .catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\nimport {Aurelia} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {ConfigService} from './config-service';\nimport {Config} from '../config';\n\nlet log = LogManager.getLogger('IdentityService');\n\nconst baseUrl = Config.getUrl('users');\n\n@inject(Aurelia, HttpClient, ConfigService)\nexport class IdentityService {\n\n  constructor(aurelia, http, configService) {\n    this.aurelia = aurelia;\n    this.http = http;\n    this.configService = configService;\n\n    this.configService.get().then(config => {\n      this.org = config.org;\n    });\n  }\n\n  static getJwt(org, username) {\n    return localStorage.getItem(IdentityService.key(org, username));\n  }\n\n  static key(org, username) {\n    return 'jwt' + (org ? org.name + username : '');\n  }\n\n  static setJwt(jwt, org, username) {\n    localStorage.setItem(IdentityService.key(org, username), jwt);\n  }\n\n  enroll(username, password, org) {\n    const jwt = IdentityService.getJwt(org, username);\n    if(jwt) {\n      log.debug(`already enrolled ${org.name} ${username}`, jwt);\n      return Promise.resolve();\n    }\n\n    const url = org ? `${org.url}/users` : baseUrl;\n\n    let params = {\n      username: username,\n      password: password\n    };\n\n    return new Promise((resolve, reject) => {\n      this.http.fetch(url, {\n        method: 'post',\n        body: json(params)\n      })\n      .then(response => {\n        response.json().then(j => {\n          if(!response.ok) {\n            reject(new Error(`cannot enroll ${response.status} ${j}`));\n          } else {\n            log.debug(j);\n\n            IdentityService.setJwt(j, org, username);\n\n            this.username = username;\n\n            if(!org) {\n              this.aurelia.setRoot('app');\n            }\n\n            resolve();\n          }\n        });\n      })\n      .catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  logout() {\n    localStorage.clear();\n    return this.aurelia.setRoot('login');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {LogManager} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {AlertService} from './alert-service';\nimport io from 'socket.io-client';\nimport {Config} from '../config';\n\nlet log = LogManager.getLogger('SocketService');\n\n@inject(EventAggregator, AlertService)\nexport class SocketService {\n\n  constructor(eventAggregator, alertService) {\n    this.eventAggregator = eventAggregator;\n    this.alertService = alertService;\n\n    this.socket = io.connect(Config.getUrl());\n  }\n\n  subscribe() {\n    log.info('subscribe socket.connected', this.socket.connected);\n\n    if (!this.subscribed) {\n      this.socket.on('chainblock', o => {\n        log.debug('chainblock', o);\n\n        this.alertService.success(`new block ${o.number} on ${o.channel_id}`);\n        this.eventAggregator.publish('block', o);\n      });\n    }\n\n    this.subscribed = true;\n  }\n\n  disconnect() {\n    this.subscribed = false;\n    this.socket.disconnect();\n  }\n\n}\n","import {bindable, bindingMode} from 'aurelia-framework';\n\n@bindable({ name: 'o', attribute: 'data'})\nexport class KeyCustomElement {\n  oChanged() {\n    if(this.o) {\n      const key = this.o;\n      const parts = key.split('\\u0000');\n      if(parts.length > 2) {\n        this.objectType = parts[1];\n        this.id = parts[2];\n      } else {\n        this.id = key;\n      }\n    }\n  }\n}\n"],"sourceRoot":".."}